package org.mfr.data;

// Generated 2011.09.19. 22:50:48 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.mfr.data.ExifData;
import org.mfr.data.PhotoCategory;
import org.mfr.data.Useracc;

/**
 * Photo generated by hbm2java
 */
@Entity
@Table(name = "photo")
@NamedQueries({
@NamedQuery(name="Photo.getPublicImage",query="from Dictionary where key=:key"),
		}
		)

public class Photo implements java.io.Serializable {

	private Integer id;
	private String name;
	private String description;
	private Date importDate;
	private String owner;
	private String path;
	private Integer accessCount;
	private Useracc useracc;
	private Date taken;
	private String title;
	private Integer provider;
	private String providerPath;
	private String providerUrl;
	private ExifData exifData;
	private Integer size;
	
	private Set<PhotoCategory> photoCategories = new HashSet<PhotoCategory>(0);

	public Photo() {
	}
	public Photo(String name, String description, Date importDate, String owner, String path) {
		this.name = name;
		this.description = description;
		this.importDate = importDate;
		this.owner = owner;
		this.path = path;
	}
	public Photo(String name, String description, Date importDate, String owner, String path,
			Set<PhotoCategory> photoCategories) {
		this.name = name;
		this.description = description;
		this.importDate = importDate;
		this.owner = owner;
		this.path = path;
		this.photoCategories = photoCategories;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 64)
	 
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "import_date", length = 8)
	public Date getImportDate() {
		return this.importDate;
	}

	
	public void setImportDate(Date importDate) {
		this.importDate = importDate;
	}

	@Column(name = "owner", length = 64)
	public String getOwner() {
		return this.owner;
	}

	public void setOwner(String owner) {
		this.owner = owner;
	}

	@Column(name = "path", length = 1000)
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "photo")
	public Set<PhotoCategory> getPhotoCategories() {
		return this.photoCategories;
	}

	public void setPhotoCategories(Set<PhotoCategory> photoCategories) {
		this.photoCategories = photoCategories;
	}
	@Column(name = "access_count",length=64)
	public Integer getAccessCount() {
		return accessCount;
	}

	public void setAccessCount(Integer accessCount) {
		this.accessCount = accessCount;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "useracc")
	@Fetch(FetchMode.JOIN)
	public Useracc getUseracc() {
		return useracc;
	}

	public void setUseracc(Useracc useracc) {
		this.useracc = useracc;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "taken", length = 8)
	public Date getTaken() {
		return taken;
	}

	public void setTaken(Date taken) {
		this.taken = taken;
	}
	@Column(name = "title", length = 128)
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}
	@Column(name = "provider",length=64)
	public Integer getProvider() {
		return provider;
	}

	public void setProvider(Integer provider) {
		this.provider = provider;
	}
	@Column(name = "provider_path",length=64)
	public String getProviderPath() {
		return providerPath;
	}

	public void setProviderPath(String providerPath) {
		this.providerPath = providerPath;
	}
	@Column(name = "provider_url",length=64)
	public String getProviderUrl() {
		return providerUrl;
	}

	public void setProviderUrl(String providerUrl) {
		this.providerUrl = providerUrl;
	}
	@Fetch(FetchMode.JOIN)
	@OneToOne(fetch = FetchType.LAZY,mappedBy="photo")
	public ExifData getExifData() {
		return exifData;
	}

	public void setExifData(ExifData exifData) {
		this.exifData = exifData;
	}
	@Column(name = "size",length=64)
	public Integer getSize() {
		return size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

}
