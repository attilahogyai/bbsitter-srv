package org.mfr.data;

// Generated 2011.09.19. 22:50:48 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.mfr.data.PhotoCategory;
import org.mfr.data.Useracc;
import org.mfr.util.HttpHelper;
import org.zkoss.util.resource.Labels;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category")
public class Category implements java.io.Serializable {

	private Integer id;
	private String name;
	private String owner1;
	private String description;
	private Integer ispublic=0;
	private Date modifyDt;
	private Useracc useracc;
	private Integer accessCount=0;
	private Integer recommend=0;
	private Integer blog=0;
	private Integer allowDownload=0;
	private Integer provider=0;
	private String path;
	
	private Date createDt;
	
	private Integer sorting;
	private Integer sortingDir;
	private Integer showComment;
	
	private transient Integer photoCount;
	
	
	private Set<PhotoCategory> photoCategories = new HashSet<PhotoCategory>(0);
	

	public Category() {
	}

	public Category(String name, String owner, Set<PhotoCategory> photoCategories) {
		this.name = name;
		this.owner1 = owner;
		this.photoCategories = photoCategories;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 4000)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	
	@Column(name = "owner", length = 64)
	public String getOwner() {
		return this.owner1;
	}

	public void setOwner(String owner) {
		this.owner1 = owner;
	}	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<PhotoCategory> getPhotoCategories() {
		return this.photoCategories;
	}

	public void setPhotoCategories(Set<PhotoCategory> photoCategories) {
		this.photoCategories = photoCategories;
	}
	@Column(name = "ispublic",length=64)
	public Integer getIspublic() {
		return ispublic;
	}

	public void setIspublic(Integer ispublic) {
		this.ispublic = ispublic;
	}
	@Column(name = "description",length=1000)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modify_dt", length = 8)
	public Date getModifyDt() {
		return modifyDt;
	}

	public void setModifyDt(Date modifyDt) {
		this.modifyDt = modifyDt;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "useracc")
	@Fetch(FetchMode.JOIN)
	public Useracc getUseracc() {
		return useracc;
	}

	public void setUseracc(Useracc useracc) {
		this.useracc = useracc;
	}
	@Column(name = "access_count",length=64)
	public Integer getAccessCount() {
		return accessCount;
	}

	public void setAccessCount(Integer accessCount) {
		this.accessCount = accessCount;
	}
	@Transient
	public Integer getPhotoCount() {
		return photoCount;
	}

	public void setPhotoCount(Integer photoCount) {
		this.photoCount = photoCount;
	}
	@Column(name = "recommend",length=64)
	public Integer getRecommend() {
		return recommend;
	}

	public void setRecommend(Integer recommend) {
		this.recommend = recommend;
	}
	public String toString(){
		return new StringBuffer("name:").append(name).append(" photoCount:").append(photoCount).append(" owner1:").append(owner1).append(" recommend:").append(recommend).toString();
	}
	@Column(name = "blog",length=64)
	public Integer getBlog() {
		return blog;
	}

	public void setBlog(Integer blog) {
		this.blog = blog;
	}
	@Transient
	public boolean getIsDefault(){
		return false;
		//return this.name.equals("default");
	}
	@Transient
	public String getDisplayName(){
		if(name.equals("default")){
			return Labels.getLabel("default.album");
		}
		return name;
	}
	@Column(name = "allow_download",length=64)
	public Integer getAllowDownload() {
		return allowDownload;
	}

	public void setAllowDownload(Integer allowDownload) {
		this.allowDownload = allowDownload;
	}
	@Column(name = "provider",length=64)
	public Integer getProvider() {
		return provider;
	}

	public void setProvider(Integer provider) {
		this.provider = provider;
	}
	@Column(name = "path", length = 4000)
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_dt", length = 8)
	public Date getCreateDt() {
		return createDt;
	}

	public void setCreateDt(Date createDt) {
		this.createDt = createDt;
	}
	@Column(name = "sort_dir", length = 64)
	public Integer getSortDir() {
		return sortingDir;
	}

	public void setSortDir(Integer sortingDir) {
		this.sortingDir = sortingDir;
	}
	@Column(name = "sort", length = 64)
	public Integer getSort() {
		return sorting;
	}

	public void setSort(Integer sorting) {
		this.sorting = sorting;
	}
	@Transient
	public boolean isCatOwner(){
		User user=HttpHelper.getUser();
		if(user!=null){
			return useracc.getId().equals(user.getUseracc().getId());
		}
		return false; 
	}
	@Column(name = "show_comment", length = 64)
	public Integer getShowComment() {
		return showComment;
	}

	public void setShowComment(Integer showComment) {
		this.showComment = showComment;
	}
	
	
}
